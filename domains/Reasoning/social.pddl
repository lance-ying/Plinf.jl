(define (problem doors-keys-goals-problem)
  (:domain doors-keys-goals)
  (:objects door1 door2 door3 - door
            key1 key2 key3 - key
            goal1 goal2 goal3 - goal
            yellow green red - color
            human - agent)
  (:init (= (walls) (new-bit-matrix false 10 7))
         (= (turn) 0)
         (= (walls) (set-index walls true 1 1))
         (= (xloc goal1) 2)
         (= (yloc goal1) 1)
         (= (walls) (set-index walls true 1 3))
         (= (xloc goal2) 4)
         (= (yloc goal2) 1)
         (= (walls) (set-index walls true 1 5))
         (= (xloc goal3) 6)
         (= (yloc goal3) 1)
         (= (walls) (set-index walls true 1 7))
         (= (walls) (set-index walls true 2 1))
         (= (xloc door1) 2)
         (= (yloc door1) 2)
         (iscolor door1 yellow)
         (locked door1)
         (= (walls) (set-index walls true 2 3))
         (= (xloc door2) 4)
         (= (yloc door2) 2)
         (iscolor door2 green)
         (locked door2)
         (= (walls) (set-index walls true 2 5))
         (= (xloc door3) 6)
         (= (yloc door3) 2)
         (iscolor door3 red)
         (locked door3)
         (= (walls) (set-index walls true 2 7))
         (= (walls) (set-index walls true 3 1))
         (= (walls) (set-index walls true 3 3))
         (= (walls) (set-index walls true 3 5))
         (= (walls) (set-index walls true 3 7))
         (= (walls) (set-index walls true 5 1))
         (= (walls) (set-index walls true 5 2))
         (= (walls) (set-index walls true 5 3))
         (= (walls) (set-index walls true 5 5))
         (= (walls) (set-index walls true 5 6))
         (= (walls) (set-index walls true 5 7))
         (= (xloc key1) 7)
         (= (yloc key1) 7)
         (iscolor key1 green)
         (= (xloc key2) 1)
         (= (yloc key2) 10)
         (iscolor key2 yellow)
         (= (xloc key3) 4)
         (= (yloc key3) 10)
         (iscolor key3 red)
         (= (xloc human) 4)
         (= (yloc human) 7))
  (:goal (has human goal1))
)